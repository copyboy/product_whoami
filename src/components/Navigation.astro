---
import { Icon } from 'astro-icon/components';
import ThemeToggle from '@components/ThemeToggle.astro';
import { getSiteConfig } from '@utils/config';
import { getLink } from '@utils/paths';

const siteConfig = getSiteConfig();
const logo = siteConfig.logo || '/logo.svg';
const brandTitle = siteConfig.brandTitle || siteConfig.title;

// 确保logo路径正确
const logoPath = logo.startsWith('http') ? logo : getLink(logo);

// 当前路径
const pathname = Astro.url.pathname;

// 检查路径是否活跃
function isActive(path: string): boolean {
  if (path === '/') {
    return pathname === path;
  }
  return pathname.startsWith(path);
}
---

<header class="sticky top-0 z-50 w-full bg-white dark:bg-slate-900 border-b border-slate-200 dark:border-slate-800">
  <div class="container mx-auto px-4 sm:px-6">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo and Site Title -->
      <div class="flex">
        <a href={getLink('/')} class="flex items-center gap-2 text-xl font-bold">
          {
            logoPath && (
              <img src={logoPath} alt="Logo" class="h-8 w-8" />
            )
          }
          <span class="hidden sm:inline-block">{brandTitle}</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center gap-1">
        <a 
          href={getLink('/')} 
          class={`flex items-center gap-2 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors ${isActive('/') ? 'text-indigo-600 dark:text-indigo-400 font-medium' : ''}`}
        >
          <Icon name="heroicons:home" class="h-5 w-5" />
          <span>Home</span>
        </a>
        <a 
          href={getLink('/blog')} 
          class={`flex items-center gap-2 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors ${isActive('/blog') ? 'text-indigo-600 dark:text-indigo-400 font-medium' : ''}`}
        >
          <Icon name="heroicons:document-text" class="h-5 w-5" />
          <span>Blog</span>
        </a>
        <a 
          href={getLink('/projects')} 
          class={`flex items-center gap-2 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors ${isActive('/projects') ? 'text-indigo-600 dark:text-indigo-400 font-medium' : ''}`}
        >
          <Icon name="heroicons:rectangle-stack" class="h-5 w-5" />
          <span>Projects</span>
        </a>
        <a 
          href={getLink('/about')} 
          class={`flex items-center gap-2 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors ${isActive('/about') ? 'text-indigo-600 dark:text-indigo-400 font-medium' : ''}`}
        >
          <Icon name="heroicons:user" class="h-5 w-5" />
          <span>About</span>
        </a>
      </nav>

      <!-- Right side controls -->
      <div class="flex items-center gap-2">
        <!-- RSS Feed -->
        <a href={getLink('/api/rss.xml')} class="p-2 rounded-full hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors" aria-label="RSS">
          <Icon name="heroicons:rss" class="h-5 w-5" />
        </a>

        <!-- Theme Toggle -->
        <ThemeToggle />

        <!-- Mobile Menu Button -->
        <button
          id="mobile-menu-button"
          class="md:hidden p-2 rounded-lg text-slate-500 hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors"
          aria-label="Toggle Menu"
        >
          <Icon name="heroicons:bars-3" class="h-5 w-5" />
        </button>
      </div>
    </div>
  </div>
</header>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileNavElement = document.getElementById('mobile-nav');

  if (mobileMenuButton && mobileNavElement) {
    mobileMenuButton.addEventListener('click', () => {
      const mobileNav = mobileNavElement as HTMLElement;
      mobileNav.classList.toggle('hidden');
      document.body.classList.toggle('overflow-hidden');
    });
  }
</script>