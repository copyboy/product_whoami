name: Deploy Demo to GitHub Pages

on:
  push:
    branches:
      - demo # 触发部署的 demo 分支
  workflow_dispatch: # 允许手动触发

# 指定 GitHub Actions 的权限，以便它可以部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过在进行中的运行之间排队的运行。
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: DEMO_GITHUB_PAGES # <--- 设置环境变量
      # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN 是自动可用的
      GITHUB_REPO_NAME: ${{ github.event.repository.name }} # 自动获取仓库名
      GITHUB_ACTOR: ${{ github.actor }} # 自动获取触发工作流的用户名
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 推荐使用 LTS 版本，根据你的项目需要调整
          cache: 'npm' # 或 'yarn', 'pnpm'

      - name: Debug environment variables
        run: |
          echo "DEPLOY_ENV: $DEPLOY_ENV"
          echo "GITHUB_REPO_NAME: $GITHUB_REPO_NAME"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "NODE_ENV: $NODE_ENV"
          
      - name: Install dependencies
        run: npm ci # 或者 yarn install --frozen-lockfile, pnpm install --frozen-lockfile

      - name: Generate debug script
        run: |
          echo "console.log('Debug configuration:');" > debug-config.js
          echo "const { getSiteConfig } = require('./src/utils/config');" >> debug-config.js
          echo "const config = getSiteConfig();" >> debug-config.js
          echo "console.log('URL:', config.url);" >> debug-config.js
          echo "console.log('Base:', config.base);" >> debug-config.js
          echo "console.log('Full URL:', config.url + config.base);" >> debug-config.js

      - name: Debug config
        run: node debug-config.js

      - name: Build Astro site
        run: |
          export NODE_ENV=production
          npm run build # Astro 的构建命令

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Astro 默认构建到 'dist' 目录
          path: './dist'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4